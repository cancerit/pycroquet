# 1. Set your GitHub default branch to dev/develop
# 2. In circleci project settings->advanced set:
#    - GitHub Status Updates (this should be on already)
#    - Only build pull requests
#    - Auto-cancel redundant builds
#    - Free and Open Source (this should be on already)
# 3. If existing project with quay.io, remove the quay build triggers.
#    - as circleci is pushing the image
#    - reevaluate when/if quay.io adds ability to authenticate pulls

version: 2.1
jobs:
  license_chk:
    machine:
      # need machine as want to mount a volume
      image: ubuntu-2004:202107-02
    steps:
      - checkout
      - run:
          name: Execute skywalking-eyes check of licenses
          command: |
            docker run --rm -v $(pwd):/github/workspace apache/skywalking-eyes header check
  build_docker:
    environment:
      IMAGE_NAME: quay.io/wtsicgp/pycroquet
    machine:
      # need machine as want to copy from
      image: ubuntu-2004:202107-02
    steps:
      - checkout
      - run:
          name: Build Docker image
          command: |
            set -e
            BRANCH_OR_TAG="${CIRCLE_TAG:-$CIRCLE_BRANCH}"
            CLEAN_BRANCH=$(echo $BRANCH_OR_TAG | tr / -)
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USER" --password-stdin
            echo "$QUAYIO_PASSWORD" | docker login -u "$QUAYIO_USER" --password-stdin quay.io
            docker build -t $IMAGE_NAME:$CLEAN_BRANCH .
            docker run -t --rm $IMAGE_NAME:$CLEAN_BRANCH pycroquet --version

            mkdir -p test-results/pytest/
            container_id=$(docker run -d --rm $IMAGE_NAME:$CLEAN_BRANCH pycroquet sleep 1000)
            docker cp $container_id:/var/www/pycroquet/junit.xml  test-results/pytest/junit.xml
            docker rm -f $container_id

            if [ "$CIRCLE_TAG" = "$BRANCH_OR_TAG" ]; then
              echo 'Pushing image'
              docker push $IMAGE_NAME:$CLEAN_BRANCH
            else
              echo "I am not a tag so not pushing image"
            fi
      - store_test_results:
          path: test-results

  pypi_publish:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout  # checkout source code to working directory
      - run:
          command: |  # create whl, install twine and publish to PyPI
            BRANCH_OR_TAG="${CIRCLE_TAG:-$CIRCLE_BRANCH}"
            pip install cython
            python setup.py sdist
            sudo pip install pipenv
            pipenv install twine
            pipenv run twine check --strict dist/*
            if [ "$CIRCLE_TAG" = "$BRANCH_OR_TAG" ]; then
              echo 'Pushing to PyPi'
              pipenv run twine upload dist/*
            else
              echo "I am not a tag so not pushing to PyPi"
            fi

workflows:
  version: 2.1
  build_test_publish:
    jobs:
      - license_chk:
          filters:
            tags:
              only: /.+/
      - build_docker:
          context:
            - dockerhub-casmservice
            - quayio-casmservice
          requires:
            - license_chk
          filters:
            tags:
              only: /.+/
      - pypi_publish:
          requires:
            - license_chk
            - build_docker
          context:
            - pypi-twine-uploads
          filters:
            tags:
              only: /.+/
